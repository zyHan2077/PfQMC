name: build-and-test

env:
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_MKL_COMPONENTS: "intel-oneapi-mkl intel-oneapi-mkl-devel"
  LINUX_MPI_COMPONENTS: "intel-oneapi-mpi intel-oneapi-mpi-devel"
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml
  CTEST_NO_TESTS_ACTION: error

on:
  push:
    paths:
      - "src/**.cpp"
      - "CMakeLists.txt"
      - ".github/workflows/main.yml"
  workflow_dispatch:

jobs:
  # free-disk-space:
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Free Disk Space (Ubuntu)
  #     uses: jlumbroso/free-disk-space@main
  #     with:
  #       # this might remove tools that are actually needed,
  #       # if set to "true" but frees about 6 GB
  #       tool-cache: true
        
  #       # all of these default to true, but feel free to set to
  #       # "false" if necessary for your workflow
  #       android: true
  #       dotnet: true
  #       haskell: true
  #       large-packages: true
  #       docker-images: true
  #       swap-storage: true

  build-and-test:
    needs: free-disk-space
    runs-on: ubuntu-latest

    steps:
    # must be first as we're using scripts from this repo
    - uses: actions/checkout@v4

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v4
      with:
        path: |
          /opt/intel/oneapi
        key: install-apt

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 10
      run: |
        sh -c .github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install ${{ env.LINUX_CPP_COMPONENTS }} ${{ env.LINUX_FORTRAN_COMPONENTS }} ${{ env.LINUX_MKL_COMPONENTS }} ${{ env.LINUX_MPI_COMPONENTS }}
    - name: Setup Intel oneAPI environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: cache Download Eigen3
      id: cache-eigen3
      uses: actions/cache@v4
      with:
        path: |
          /opt/Eigen
        key: download-eigen3

    - name: Download EIGEN3
      if: steps.cache-eigen3.outputs.cache-hit != 'true'
      run: |
        wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
        tar -xzf eigen-3.4.0.tar.gz
        sudo mv eigen-3.4.0/Eigen /opt
        rm -rf eigen-3.4.0*
    
    - name: install Gtest
      run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp lib/*.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a

    - name: install pfapack
      run: export PATH=/opt/intel/oneapi/compiler/2024.1/bin:$PATH && cd inc/pfapack/fortran && make mFC=ifx && cd ../c_interface && make && cd ../../..
        
    - name: CMake Configure 
      run: cmake -B build -DEIGEN3_INCLUDE_DIR=/opt
    
    - name: CMAKE Build
      run: cmake --build build --parallel

    - name: Run test
      timeout-minutes: 10
      run: ctest --test-dir build -V

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 10
